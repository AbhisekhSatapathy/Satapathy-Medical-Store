/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.PdfWriter;
import dob.ConnectionProvider;
import dob.MedicalUtils;
import com.itextpdf.text.Paragraph;
import java.io.FileOutputStream;
import com.itextpdf.text.pdf.PdfPTable;
import common.OpenPdf;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.UUID;



/**
 *
 * @author satap
 */
public class SellMedicine extends javax.swing.JFrame {

    public String numberPattern = "^[0-9]*$";
    public String mobileNumberPattern="^[0-9]*$";
    private String username = "";
    private String billId = "";
    private int finalTotalPrice = 0;
    public String customerName="";
    public String customerMobileNumber="";
    public String drName="";
    

    /**
     * Creates new form SellMedicine
     */
    public SellMedicine() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public SellMedicine(String tempUsername) {
        initComponents();
        username = tempUsername;
        setLocationRelativeTo(null);
    }

    private void medicineName(String nameOrUniqueId) {
        DefaultTableModel model = (DefaultTableModel) medicinesTable.getModel();
        model.setRowCount(0);
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from medicine where name like '" + nameOrUniqueId + "%' or id like '" + nameOrUniqueId + "%'");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("id") + " - - - > " + rs.getString("name")});

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void clearMedicineField() {
        txtMedicineId.setText("");
        txtName.setText("");
        txtCompanyName.setText("");
        txtPrice.setText("");
        txtNoOfUnit.setText("");
        txtTotalPrice.setText("");
        txtManufacturingDate.setText("");
        txtExpiryDate.setText("");
    }

    public String getMedcineId(String prefix) {
        return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicinesTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtMedicineId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCompanyName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNoOfUnit = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        btnAddToCart = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        lblFinalTotalPrice = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCustomerMobileNumber = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtManufacturingDate = new javax.swing.JTextField();
        txtExpiryDate = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDrName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setText("Sell Medicine");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 6, 337, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 70, 1354, 10));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1309, 16, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Search");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, -1, -1));

        txtSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 300, -1));

        medicinesTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        medicinesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Medicine"
            }
        ));
        medicinesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicinesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(medicinesTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 290, 300, 420));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Medicine ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 102, -1));

        txtMedicineId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtMedicineId, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 120, 300, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, 54, -1));

        txtName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 190, 300, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Company Name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 230, 123, -1));

        txtCompanyName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtCompanyName, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 260, 300, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Price per Unit");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 90, 110, -1));

        txtPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 120, 300, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("No. of Unit");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 160, 89, -1));

        txtNoOfUnit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtNoOfUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoOfUnitKeyReleased(evt);
            }
        });
        getContentPane().add(txtNoOfUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 190, 300, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Total Price");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 230, 86, -1));

        txtTotalPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 260, 300, -1));

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Name", "Company Name", "Price per Unit", "No. of Unit", "Total Price", "Manufacturing Date", "Expiry Date"
            }
        ));
        cartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cartTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, 670, 260));

        btnAddToCart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddToCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add to cart.png"))); // NOI18N
        btnAddToCart.setText("Add to cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 370, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("RS :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 700, -1, -1));

        lblFinalTotalPrice.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblFinalTotalPrice.setText("00");
        getContentPane().add(lblFinalTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 700, 120, -1));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/generate bill & print.png"))); // NOI18N
        jButton3.setText("Purchase & Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 700, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Name");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 43, -1));

        txtCustomerName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 245, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Mobile Number");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 121, -1));

        txtCustomerMobileNumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCustomerMobileNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerMobileNumberActionPerformed(evt);
            }
        });
        getContentPane().add(txtCustomerMobileNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 180, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Manufacturing Date");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 300, 160, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Expiry Date");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 300, 100, -1));

        txtManufacturingDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtManufacturingDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 330, 300, -1));

        txtExpiryDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtExpiryDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 330, 300, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Dr. Name");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 191, 77, -1));

        txtDrName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txtDrName, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 191, 251, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/sellMedicineBackground.png"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        medicineName("");
        txtMedicineId.setEditable(false);
        txtName.setEditable(false);
        txtCompanyName.setEditable(false);
        txtPrice.setEditable(false);
        txtTotalPrice.setEditable(false);
    }//GEN-LAST:event_formComponentShown

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String search = txtSearch.getText();
        medicineName(search);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void medicinesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicinesTableMouseClicked
        // TODO add your handling code here:
        int index = medicinesTable.getSelectedRow();
        TableModel model = medicinesTable.getModel();
        String nameOrUniqueId = model.getValueAt(index, 0).toString();

        String uniqueId[] = nameOrUniqueId.split(" - - - > ", 0);
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from medicine where id=" + uniqueId[0] + "");
            SimpleDateFormat dFormat=new SimpleDateFormat("dd-mm-yyyy");
            
            while (rs.next()) {
                String manufacturingDate=rs.getString("manufacturingDate");
                String expiryDate=rs.getString("expiryDate");
                
                Date mfd=dFormat.parse(manufacturingDate);
                Date exp=dFormat.parse(expiryDate);
                
                String formatedMfd=dFormat.format(mfd);
                String formatedExp=dFormat.format(exp);
                txtMedicineId.setText(uniqueId[0]);
                txtName.setText(rs.getString("name"));
                txtCompanyName.setText(rs.getString("companyName"));
                txtPrice.setText(rs.getString("price"));
                txtManufacturingDate.setText(formatedMfd);
                txtExpiryDate.setText(formatedExp);
                txtNoOfUnit.setText("");
                txtTotalPrice.setText("");

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_medicinesTableMouseClicked

    private void txtNoOfUnitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoOfUnitKeyReleased
        // TODO add your handling code here:
        String noOfUnits = txtNoOfUnit.getText();
        if (!noOfUnits.equals("")) {
            String price = txtPrice.getText();
            if (!noOfUnits.matches(numberPattern)) {
                JOptionPane.showMessageDialog(null, "Invalid No of Unit format!");
            }
            int totalPrice = Integer.parseInt(noOfUnits) * Integer.parseInt(price);
            txtTotalPrice.setText(String.valueOf(totalPrice));
        } else {
            txtTotalPrice.setText("");
        }

    }//GEN-LAST:event_txtNoOfUnitKeyReleased

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        String noOfUnit = txtNoOfUnit.getText();
        String medicineId = txtMedicineId.getText();

        if (!noOfUnit.equals("") && !medicineId.equals("")) {
            String name = txtName.getText();
            String companyName = txtCompanyName.getText();
            String price = txtPrice.getText();
            String totalPrice = txtTotalPrice.getText();
            String manufacturingDate=txtManufacturingDate.getText();
            String expiryDate=txtExpiryDate.getText();
            int checkStock = 0;
            int checkMedicineAlreadyExistInCard = 0;

            try {
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("Select * from medicine where id=" + medicineId + "");
                while (rs.next()) {
                    if (rs.getInt("quantity") >= Integer.parseInt(noOfUnit)) {
                        checkStock = 1;
                    } else {
                        JOptionPane.showMessageDialog(null, "Medicine is out of Stock " + rs.getInt("quantity") + " Left");

                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

            try {
                if (checkStock == 1) {
                    DefaultTableModel dtm = (DefaultTableModel) cartTable.getModel();
                    if (cartTable.getRowCount() != 0) {
                        for (int i = 0; i < cartTable.getRowCount(); i++) {
                            if (Integer.parseInt(dtm.getValueAt(i, 0).toString()) == Integer.parseInt(medicineId)) {
                                checkMedicineAlreadyExistInCard = 1;
                                JOptionPane.showMessageDialog(null, "Medicine Already Exist!!");
                            }
                        }
                    }
                    if (checkMedicineAlreadyExistInCard == 0) {
                        dtm.addRow(new Object[]{medicineId, name, companyName, price, noOfUnit, totalPrice, manufacturingDate, expiryDate});
                        finalTotalPrice = finalTotalPrice + Integer.parseInt(totalPrice);
                        lblFinalTotalPrice.setText(String.valueOf(finalTotalPrice));
                        JOptionPane.showMessageDialog(null, "Added Successfully");
                    }
                    clearMedicineField();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

        } else {
            JOptionPane.showMessageDialog(null, "No of Units and Medicine ID field is required!!");
        }


    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void cartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTableMouseClicked
        // TODO add your handling code here:
        int index=cartTable.getSelectedRow();
        int a =JOptionPane.showConfirmDialog(null,"Do you wnat to remove this medicine","Select",JOptionPane.YES_NO_OPTION);
        if(a==0){
            TableModel model=cartTable.getModel();
            String total=model.getValueAt(index,5).toString();
            finalTotalPrice=finalTotalPrice-Integer.parseInt(total);
            lblFinalTotalPrice.setText(String.valueOf(finalTotalPrice));
            ((DefaultTableModel) cartTable.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_cartTableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        customerName=txtCustomerName.getText();
        customerMobileNumber=txtCustomerMobileNumber.getText();
        drName=txtDrName.getText();
        if (customerName.equals("")) {
            JOptionPane.showMessageDialog(null, "Name filed is Required!");
        } else if (customerMobileNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Mobile Number field is Required!");
        } else if (customerMobileNumber.equals(mobileNumberPattern) || customerMobileNumber.length() != 10) {
            JOptionPane.showMessageDialog(null, "Invalid Mobile Number!");
        } else {
            if (finalTotalPrice != 0) {
                billId = UUID.randomUUID().toString();//"Bill-");
                DefaultTableModel dmt = (DefaultTableModel) cartTable.getModel();
                if (cartTable.getRowCount() != 0) {
                    for (int i = 0; i < cartTable.getRowCount(); i++) {
                        try {
                            Connection con = ConnectionProvider.getCon();
                            Statement st = con.createStatement();
                            st.executeUpdate("UPDATE medicine SET quantity = quantity - " + (dmt.getValueAt(i, 4).toString()) + " WHERE id = " + (dmt.getValueAt(i, 0).toString()));

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
                try {
                    SimpleDateFormat myFormat = new SimpleDateFormat("DD-MM-YYYY");
                    Calendar cal = Calendar.getInstance();
                    Connection con = ConnectionProvider.getCon();
                    PreparedStatement ps = con.prepareStatement("insert into bill(billId,billDate,totalPaid,generatedBy) values (?,?,?,?)");
                    ps.setString(1, billId);
                    ps.setString(2, myFormat.format(cal.getTime()));
                    ps.setInt(3, finalTotalPrice);
                    ps.setString(4, username);
                    ps.executeUpdate();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }

                //generate Bill
                com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
                try {
                    PdfWriter.getInstance(doc, new FileOutputStream(MedicalUtils.billPath + "" + billId + ".pdf"));
                    doc.open();

                    Paragraph gstIn = new Paragraph("GSTIN: 08GSRPK1205C1Z45");//GST Number
                    doc.add(gstIn);
                     
                    Paragraph medicalName = new Paragraph("                                                           Satapathy Medical Store");
                    doc.add(medicalName); 
                    
                    Paragraph address = new Paragraph("                                                    Binka, Sonepur, ODISHA, 767019");
                    doc.add(address);
                    
                    Paragraph storeMobileNo = new Paragraph("                                                                    9777357512");
                    doc.add(storeMobileNo);
                    
                    Paragraph starLine = new Paragraph("****************************************************************************************************************");
                    doc.add(starLine);
                    Paragraph details = new Paragraph("\tBill Id: " + billId + "\nDate: " + new Date());
                    doc.add(details);
                    Paragraph cName = new Paragraph("Name: "+customerName);
                    doc.add(cName);
                    Paragraph cMobileNo = new Paragraph("Mobile Number: "+customerMobileNumber);
                    doc.add(cMobileNo);
                    Paragraph cdrName = new Paragraph("Prescribed by : Dr. "+drName);
                    doc.add(cdrName);
                    Paragraph total = new Paragraph("Total: " + finalTotalPrice);
                    doc.add(total);
                    doc.add(starLine);
                    PdfPTable tbl = new PdfPTable(7);
                    tbl.addCell("Medicine Id");
                    tbl.addCell("Item");
                    tbl.addCell("Manufacturing Date");
                    tbl.addCell("Expiry Date");
                    tbl.addCell("Price Per Unit");
                    tbl.addCell("No.of Units");
                    tbl.addCell("Amount");
                    for (int i = 0; i < cartTable.getRowCount(); i++) {
                        String a = cartTable.getValueAt(i, 0).toString();
                        String b = cartTable.getValueAt(i, 1).toString();
                        String c = cartTable.getValueAt(i, 6).toString();
                        String d = cartTable.getValueAt(i, 7).toString();
                        String e = cartTable.getValueAt(i, 3).toString();
                        String f = cartTable.getValueAt(i, 4).toString();
                        String g = cartTable.getValueAt(i, 5).toString();

                        tbl.addCell(a);
                        tbl.addCell(b);
                        tbl.addCell(c);
                        tbl.addCell(d);
                        tbl.addCell(e);
                        tbl.addCell(f);
                        tbl.addCell(g);
                    }

                    doc.add(tbl);
                    doc.add(starLine);
                    
                    Paragraph term = new Paragraph("Terms & Condition:");
                    Paragraph term1 = new Paragraph("1. Please consult your doctor before using medicines.");
                    Paragraph term2 = new Paragraph("2. NO EXCHANGE AND NO RETURNS");
                    Paragraph term3 = new Paragraph("3. All subject to BINKA jurisdiction only");
                    Paragraph term4 = new Paragraph("4. Free home delivery");
                    Paragraph term5 = new Paragraph("5. WhatsApp Number:9777357512");
                            
                    
                    doc.add(term);
                    doc.add(term1);
                    doc.add(term2);
                    doc.add(term3);
                    doc.add(term4);
                    doc.add(term5);
                    
                    
                    //gap one line next
                    Paragraph nextLine = new Paragraph("\n");
                    doc.add(nextLine);
                    doc.add(nextLine);
                    
                    Paragraph sign = new Paragraph("for Satapathy Medical");
                    doc.add(sign);
                    
                    
                    
                    //open pdf
                    OpenPdf.openById(String.valueOf(billId));

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                doc.close();
                setVisible(false);
                new SellMedicine(username).setVisible(true);

            } else {
                JOptionPane.showMessageDialog(null, "Please Add some Medicine to cart!!");
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerNameActionPerformed

    private void txtCustomerMobileNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerMobileNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerMobileNumberActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JTable cartTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblFinalTotalPrice;
    private javax.swing.JTable medicinesTable;
    private javax.swing.JTextField txtCompanyName;
    private javax.swing.JTextField txtCustomerMobileNumber;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtDrName;
    private javax.swing.JTextField txtExpiryDate;
    private javax.swing.JTextField txtManufacturingDate;
    private javax.swing.JTextField txtMedicineId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNoOfUnit;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables
}
